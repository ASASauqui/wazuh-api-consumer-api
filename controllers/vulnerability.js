const axios = require('axios');
const https = require('https');
const jwt = require('jsonwebtoken');

const getVulnerabilities = async (req, res) => {
    try {
        const authorization = req.headers.authorization;

        if (!authorization) {
            return res.status(400).json({ message: 'Token is required' });
        }

        const { id } = req.params;

        if (!id) {
            return res.status(400).json({ message: 'ID is required' });
        }

        const response = await axios.get(`${process.env.API_URL}/vulnerability/${id}?wait_for_complete=true&pretty=true`, {
            headers: { 'Authorization': authorization },
            httpsAgent: new https.Agent({
                rejectUnauthorized: false
            })
        });

        return res.status(response.status).json(response.data);
    }
    catch (error) {
        return res.status(500).json({ message: error.message });
    }
};

const getAgentVulnerabilitiesFieldSummary = async (req, res) => {
    try {
        const authorization = req.headers.authorization;

        if (!authorization) {
            return res.status(400).json({ message: 'Token is required' });
        }

        const { id, field } = req.params;

        if (!id) {
            return res.status(400).json({ message: 'ID is required' });
        }

        if (!field) {
            return res.status(400).json({ message: 'Field is required' });
        }

        const response = await axios.get(`${process.env.API_URL}/vulnerability/${id}/summary/${field}?pretty=true&wait_for_complete=true`, {
            headers: { 'Authorization': authorization },
            httpsAgent: new https.Agent({
                rejectUnauthorized: false
            })
        });

        return res.status(response.status).json(response.data);
    }
    catch (error) {
        return res.status(500).json({ message: error.message });
    }
}

module.exports = {
    getVulnerabilities,
    getAgentVulnerabilitiesFieldSummary
};
